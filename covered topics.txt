Microservices

Graphs, Subgraphs and Gateway

Drizzle ORM with Mysql and Nodejs (including connection , migration and seeding)

Nestjs (project structure, DIs)

Graphql

Apollo Server

Code First Approch

Authentication 

Package Management

Fastify

Typesafety , eslint for linting 

prettier

data class validators nestjs

Apis with CRUD, dashboard and user activity monitoring service

Channels

Users

Posts, Likes , Comments , Replies

Dashboard functionality

User Activity

users tracking

Post activities

Reply activities

Comment Activity

 RBAC Authorization

Testing of features

user-service (RBAC) + Features

Gateway

Post service features + RBAC

Containerization using Docker


How to generate build

How to write dockerfile

How to write docker compose yml file

Cli commands to work with docker 

Configurations and setup

Port mapping and concepts like containerization of package and db in same container and separate container advantages , disadvantages while working with microservice architecture

Learning about caching and redis

Security features

CORS for url limiting

@Fastify/rate-limit (for protection from DDOS attacks)

class-validators for protection from SQL injection like attacks

JWT tocken for hashing of password + Authenticating user securely

Some additional security topics covered theoretically
- Throttling (secures from malicious requests and prtects server from getting crashed)
- Fastify/helmet for secure connection

How to make Robust systems

Need of web sockets and how service like kafka helps in threadhive like projects to manage notification and event monitoring from liked post to view page with low latency and high throughput.